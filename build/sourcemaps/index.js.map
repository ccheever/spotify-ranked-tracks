{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["var _ = require('lodash-node');\nvar express = require('express');\nvar instapromise = require('instapromise');\nvar request = require('request');\n\nvar MARKET = 'US';\n\nfunction _apiUrl(method, params) {\n  var host = 'api.spotify.com';\n  var version = 'v1';\n  var paramList = [];\n  for (var key in params) {\n    var val = params[key];\n    paramList.push(encodeURIComponent(key) + '=' + encodeURIComponent(val));\n  }\n  return 'https://' + host + '/' + version + '/' + method + '?' + paramList.join('&');\n}\n\nasync function apiCallAsync(method, params) {\n  var url = _apiUrl(method, params);\n  console.log(\"Spotify API call:\", url);\n  var response = await request.promise.get(url);\n  try {\n    return JSON.parse(response.body);\n  } catch (e) {\n    return null;\n  }\n}\n\nasync function artistIdAsync(artistName) {\n  var result = await apiCallAsync('search', {\n    q: artistName,\n    type: 'artist',\n    market: MARKET,\n    limit: 1,\n    offset: 0,\n  });\n\n  if (result && result.artists && result.artists.items && result.artists.items[0]) {\n    return result.artists.items[0].id;\n  }\n\n}\n\nasync function allAlbumIdsAsync(artistId) {\n  var result = await apiCallAsync('artists/' + artistId + '/albums', {\n    market: MARKET,\n    limit: 50,\n    offset: 0,\n  });\n\n  var albums = result.items;\n\n  if (albums) {\n    var albumIds = [];\n    for (var a of albums) {\n      albumIds.push(a.id);\n    }\n    return albumIds;\n  } else {\n    return [];\n  }\n}\n\nfunction segment(list, step) {\n  var x = [];\n  for (var i = 0; i < list.length; i += step) {\n    x.push(list.slice(i, i + step));\n  }\n  return x;\n}\n\nasync function allTracksFromAlbumIdsAsync(albumIds) {\n  var segments = segment(albumIds, 20);\n\n  var awaitables = [];\n  for (var s of segments) {\n    awaitables.push(apiCallAsync('albums', {\n      ids: s.join(','),\n    }));\n  }\n\n  var results = await Promise.all(awaitables);\n\n  var tracks = [];\n  for (var r of results) {\n    var albums = r.albums;\n    for (var a of albums) {\n      for (var t of a.tracks.items) {\n        tracks.push(t);\n      }\n    }\n  }\n  return tracks;\n}\n\nasync function infoForTracksAsync(trackIds) {\n  let segments = segment(trackIds, 50);\n\n  let awaitables = [];\n  for (let s of segments) {\n    awaitables.push(apiCallAsync('tracks', {\n      ids: s.join(','),\n    }));\n  }\n\n  let results = await Promise.all(awaitables);\n  let trackInfos = [];\n  for (let r of results) {\n    let tracks = r.tracks;\n    for (let t of tracks) {\n      trackInfos.push(t);\n    }\n  }\n  return trackInfos;\n}\n\nfunction filterTrackInfoToJustArtist(trackInfos, artistId) {\n  let result = [];\n  for (let t of trackInfos) {\n    let include = false;\n    for (let a of t.artists) {\n      if (a.id === artistId) {\n        include = true;\n        break;\n      }\n    }\n    if (include) {\n      result.push(t);\n    }\n  }\n  return result;\n}\n\nasync function popularTracksByArtistAsync(artistName) {\n  var artistId = await artistIdAsync(artistName);\n  var albumIds = await allAlbumIdsAsync(artistId);\n  var tracks = await allTracksFromAlbumIdsAsync(albumIds);\n  let trackIds = tracks.map((t) => t.id);\n  let trackInfos = await infoForTracksAsync(trackIds);\n  let filteredTrackInfos = filterTrackInfoToJustArtist(trackInfos, artistId);\n  var popularTracks = _.sortBy(filteredTrackInfos, 'popularity');\n  popularTracks.reverse();\n  return popularTracks;\n}\n\nfunction escape(text) {\n  if (text == null) {\n    return '';\n  } else {\n    return text\n      .toString()\n      .replace(/&/g,'&amp;' )\n      .replace(/</g,'&lt;')\n      .replace(/\"/g,'&quot;')\n      .replace(/'/g,'&#039;')\n      ;\n  }\n}\n\nvar formHtml = `\n<form onsubmit=\"window.location = ('/tracks/' + encodeURIComponent(document.getElementById('artistName').value)); return false;\">\n  <input type=\"text\" id=\"artistName\" />\n  <input type=\"submit\" value=\" See Top Tracks \" />\n</form>\n`;\n\n\nfunction htmlForTracks(tracks) {\n  var fields = ['id', 'popularity', 'name', 'albumName', 'uri'];\n  tracks = tracks.map((t) => Object.assign(t, {albumName: t.album.name}));\n  var html = \"<style>BODY { font-family: Helvetica; font-size: 10pt; }</style>\" + formHtml + \"<table><tr><th>#</th>\";\n  for (var f of fields) {\n    html += \"<th>\" + f + \"</th>\";\n  }\n  html += \"</tr>\";\n\n  var n = 0;\n  for (var t of tracks) {\n    html += \"<tr>\";\n    n++;\n    html += \"<td>\" + n + \"</td>\";\n    for (var f of fields) {\n      var x = t[f];\n      if (_.isString(x) && x.match(/^[a-z]+:/)) {\n        var val = '<a href=\"' + x + '\">#' + x + '</a>';\n      } else {\n        val = escape(x);\n      }\n      html += \"<td>\" + val + \"</td>\";\n    }\n    html += \"</tr>\";\n\n  }\n  html += \"</table>\";\n\n  return html;\n\n}\n\n\nif (require.main === module) {\n  var app = express();\n  app.get('/tracks/:artistName', (req, res) => {\n    console.log(\"artistName=\", req.params.artistName);\n    popularTracksByArtistAsync(req.params.artistName).then((tracks) => {\n      console.log(\"aristName=\", req.params.artistName, \"tracks.length=\", tracks.length);\n      res.send(htmlForTracks(tracks));\n    }, (err) => {\n      console.error(\"Failed: \" + err.message);\n    });\n  });\n  app.get('/', (req, res) => {\n    res.send(`\n<html>\n  <head>\n    <title>Spotify Top Tracks</title>\n  </head>\n  <body>` + formHtml + `\n  </body>\n</html>\n    `);\n  });\n  var server = app.listen(3000, () => {\n    var host = server.address().address;\n    var port = server.address().port;\n    console.log(\"Top tracks app listening at http://\" + host + \":\" + port);\n  });\n}\n\nmodule.exports = {\n  apiCallAsync,\n  artistIdAsync,\n  allAlbumIdsAsync,\n  allTracksFromAlbumIdsAsync,\n  infoForTracksAsync,\n  popularTracksByArtistAsync,\n  htmlForTracks,\n  escape,\n};\n"],"sourceRoot":"/source/"}